@page "/admin/profile"
@using ArtCommissions.Data;
@using System.Drawing;
@using System.IO;
@using Microsoft.EntityFrameworkCore;
@using System.Text.Json;
@inject IDbContextFactory<PostgresContext> contextFactory
@inject NavigationManager navManager
@inject HttpClient httpclient



<h3>ArtistProfile</h3>

<p> currently viewing the profile of artist @fname @lname</p>
<hr />
<p> about me: @aboutme</p>
<hr />
<p> commission total : @result</p>


@code {
    //TODO: still need to make artist profile table in our database (profile picture)
    [Parameter]
    public int id { get; set; } = 1;
    public string? fname { get; set; }
    public string? lname { get; set; }
    public string? aboutme { get; set; }
    //public string? commissioncount { get; set;  }
    public int result { get; set; }
    //public string? socials { get; set; }
    public class CommissionResponse
    {
        public int Result { get; set; }
        public int Id { get; set; }
        public object Exception { get; set; }
        public int Status { get; set; }
        public bool IsCanceled { get; set; }
        public bool IsCompleted { get; set; }
        public bool IsCompletedSuccessfully { get; set; }
        public int CreationOptions { get; set; }
        public object AsyncState { get; set; } 
        public bool IsFaulted { get; set; }
    }


    protected override async Task OnInitializedAsync()
    {
        using var context = contextFactory.CreateDbContext();

        var artist = await context.Artists.Include(a => a.Socials)
            .FirstOrDefaultAsync(i => i.Id == id);


        fname = artist.Firstname;
        lname = artist.Lastname;
        aboutme = artist.Aboutme;
        //socials = artist.Socials.;
        //var commissioncountjson = httpclient.GetFromJsonAsync<int> ("https://localhost:7087/CommissionRequest/1");
        //commissioncount = JsonSerializer.Serialize<Task<int>>(commissioncountjson);

        var commissioncountjson = await httpclient.GetFromJsonAsync<CommissionResponse>("https://localhost:7087/CommissionRequest/1");
        if(commissioncountjson is null)
        {
            result = 0;
        }
        else
        {
            result = commissioncountjson.Result;
        }
       


    }

    async Task refreshAsync()
    {

        
    }
}
    