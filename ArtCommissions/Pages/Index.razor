@page "/"
@using ArtCommissions.Data;
@using System.Drawing;
@using System.IO;
@using Syncfusion.Blazor.Navigations
@inject IDbContextFactory<PostgresContext> contextFactory

<div class="border border-success">
    <h3>Artist Profile</h3>
    <p> This is the page of @Name</p>
    <p> about me: @About</p>
</div>
<div class="border border-danger">
    @if (Socials is not null)
    {
        @foreach (Social row in Socials)
        {
            <p>@row.Site : <a href="@row.Link">@row.Link</a></p>
        }
    }
    else
    {
        <p>no socials found</p>
    }
</div>

@if (imageBytes.Count != 0)
{
    <div class="control-container w-75">
        <SfCarousel>
            @foreach (byte[] image in imageBytes)
            {
                <CarouselItem>
                    <figure class="img-container">
                        <img src="data:image/jpeg;base64,@Convert.ToBase64String(image)" alt="Los Angeles" class="d-block w-100">
                    </figure>
                </CarouselItem>
            }
        </SfCarousel>
    </div>
}
else
{
    <p>No image</p>
}

@code {
    //TODO: still need to make artist profile table in our database (profile picture)
    [Parameter]
    public int ArtistID { get; set; } = 1;
    public string? Name { get; set; }
    public string? About { get; set; }
    public IEnumerable<Social>? Socials { get; set; } = null;
    private List<byte[]> imageBytes { get; set; } = new();
    private byte[]? pfp { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = contextFactory.CreateDbContext();

        var artist = await context.Artists
            .Include(a => a.Socials)
            .FirstOrDefaultAsync(i => i.Id == ArtistID);

        var exampleImages = await context.ExampleImages
            .Where(i => i.CommissionExampleId == 0)
            .Where(i => i.IsInCarousel == true)
            .ToListAsync();

        foreach (ExampleImage e in exampleImages)
        {
            imageBytes.Add(e.Image);
        }

        Name = $"{artist.Firstname} {artist.Lastname}";
        About = artist.Aboutme;
        Socials = artist.Socials;
        pfp = artist.Profilepic;
    }
}